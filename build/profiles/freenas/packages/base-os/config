[Package]

name = base-os
comment = "FreeNAS OS"
desc = "FreeNAS OS (derived from FreeBSD)"
www = http://www.freenas.org/
origin = freenas/os
maintainer = dev@ixsystems.com
prefix = /
arch = freebsd:10:x86:64
licenselogic = or
licenses = [BSD, MIT, GPL]

requires-reboot = True
[Scripts]

post-install =
	KV="$(uname -K)" || KV=0
	if [ "${KV}" -lt 1100000 ]; then
		script_name=base-os-post-install
                mkdir -p /update-scripts
                cp "${0}" /update-scripts/${script_name}
                echo ${script_name} >> /update-scripts/order
                exit 0
        fi

	/usr/bin/touch /boot/kernel/linker.hints
	/usr/bin/touch /boot/modules/linker.hints
	/usr/bin/touch /data/.hba_firmware_update

post-upgrade =
	KV="$(uname -K)" || KV=0
	if [ "${KV}" -lt 1100000 ]; then
		script_name=base-os-post-upgrade
                mkdir -p /update-scripts
                cp "${0}" /update-scripts/${script_name}
                echo  ${script_name} >> /update-scripts/order
                exit 0
        fi
	/usr/bin/touch /boot/kernel/linker.hints
	/usr/bin/touch /boot/modules/linker.hints
	/usr/bin/touch /data/.hba_firmware_update
	if [ -c /dev/null ]; then
	   for disk in $(sysctl -n kern.disks); do
	       if gpart show ${disk} | grep -q freebsd-boot; then
		   gpart bootcode -b /boot/pmbr -p /boot/gptzfsboot -i 1 /dev/${disk}
	       elif sysctl -n machdep.bootmethod | fgrep -q "EFI" && gpart show ${disk} | grep -q efi; then
		   if mount -t msdosfs /dev/${disk}p1 /boot/efi; then
		       cp /boot/boot1.efi /boot/efi/efi/boot/BOOTx64.efi
		       umount -f /boot/efi
		   fi
	       fi
	   done
	fi

    rm -rf /usr/local/www/freenasUI

    touch /data/need-update
    rm -f /data/sentinels/unscheduled-reboot

[Files]
exclude = /usr/local/www/freenasUI
	/usr/local/www/webui
	/usr/local/www/data/docs
	/usr/local/share/doc
	/usr/local/share/gtk-doc
	/usr/local/share/gir-1.0
	/usr/local/info
	/usr/local/share/examples
	/var/log
	/conf/base/var/log/usr/log
	/conf/base/var/db/fontconfig
	/var/db/pkg
	/conf/var/db/pkg
	/dev/*
	/data/*

[Services]

# This is a list of comma-seperated services provided by this package.
# "reboot" is kinda special.
# Note that I removed "DirectoryServices"
services = SMB, AFP, NFS, iSCSI, WebDAV, reboot

# This is a list of comma-seperated services that will always be
# be restarted when this package is update.  "all" means all services
# provided by this package.
# In this case, nothing is automatically restarted, because base-os requires
# a reboot unless otherwise stated.
# restart = all
