[Package]

name = base-os
comment = "FreeNAS OS"
desc = "FreeNAS OS (derived from FreeBSD)"
www = http://www.freenas.org/
origin = freenas/os
maintainer = dev@ixsystems.com
prefix = /
arch = freebsd:9:x86:64
licenselogic = or
licenses = [BSD, MIT, GPL]

requires-reboot = True
[Scripts]

post-install = /usr/bin/touch /boot/kernel/linker.hints
	/usr/bin/touch /boot/modules/linker.hints

post-upgrade = /usr/bin/touch /boot/kernel/linker.hints
	     /usr/bin/touch /boot/modules/linker.hints
	/bin/sh /etc/ix.rc.d/ix-device_hints start
	test -f /usr/local/www/freenasUI/manage.py && yes | /usr/local/bin/python /usr/local/www/freenasUI/manage.py migrate --all --merge --delete-ghost-migrations > "/data/update.failed" 2>&1 && rm -f /data/update.failed
	if [ -c /dev/null -a -f /boot/grub/grub.cfg ]; then
	   for disk in $(sysctl -n kern.disks); do
	       gpart show ${disk} | grep -q bios-boot && /usr/local/sbin/grub-install --modules="zfs part_gpt" /dev/${disk}
	   done
	fi
	    
#	/usr/bin/touch /data/cd-upgrade
#	/usr/bin/touch /data/need-update
#	test -f /data/freenas-v1.db && \
#	     /usr/bin/yes | /usr/local/bin/python \
#		      /usr/local/www/freenasUI/manage.py migrate --all --merge --delete-ghost-migrations

[Files]
exclude = @include(../middleware/filelist)
	@include(../freenasUI/filelist)
	@include(../freebsd-pkgdb/filelist)
	/usr/lib/*.a
	/usr/local/share/doc
	/usr/local/share/gtk-doc
	/usr/local/share/gir-1.0
	/usr/local/info
	/usr/local/man
	/usr/local/share/examples
	/var/log
	/conf/base/var/log/usr/log
	/conf/base/var/db/fontconfig
	/conf/var/db/pkg
	/dev/*

[Services]

# This is a list of comma-seperated services provided by this package.
# "reboot" is kinda special.
# Note that I removed "DirectoryServices"
services = SMB, AFP, NFS, iSCSI, WebDAV, reboot

# This is a list of comma-seperated services that will always be
# be restarted when this package is update.  "all" means all services
# provided by this package.
# In this case, nothing is automatically restarted, because base-os requires
# a reboot unless otherwise stated.
# restart = all
